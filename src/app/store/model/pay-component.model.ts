export interface  PayComponentObject {
   payComponents: PayComponentModel[]
}
export interface  PayComponentModel {
    payComponentID: number,
    payHeadID: number,
    payCode: string,
    payComponentName: string,
    payComponentType: string,
    variableComponent: boolean,
    prorateOnPaidDays: boolean,
    taxable: string,
    nonTaxableLimit: number,
    pfApplicable: boolean,
    esiApplicable: boolean,
    lwfApplicable: boolean,
    ptApplicable: boolean,
    bonusApplicable: boolean,
    arrearApplicable: boolean,
    leaveEncashmentApplicable: boolean,
    payWithSalary: boolean,
    showOnSalarySlip: boolean,
    salarySlipOrder: number,
    showOnSalaryRegister: boolean,
    salaryRegisterOrder: number,
    rounding: number,
    partOfCTC: boolean,
    partOfGross: boolean,
    payInJoiningMonth: boolean,
    payInJoiningMonthDay: number,
    payInLeavingMonth: boolean,
    payInLeavingMonthDay: number,
    arrearAplicable: boolean,
    leaveID: number,
    loanType:string,
	  loanEligibilityDays:number,
	  interestType :string,
	  interestRate:number,
	  loanAmountLimit:number,
	  maxEMI:number,
	  exceptionAllowed:boolean | false,
    blockPeriod: string | null
    payOnClaim: boolean | true,
    entitlementCycle: string | null
    entitlementDay: number | 0,
    restrictClaimWindo: true,
    claimWindowPeriodFrom: number | 0,
    claimWindowPeriodTo: number | 0,
    claimFrequency: string | null
    transferBalance: string | null
    claimRequestLimit: number | 0,
    perquisiteTypeID: number | 0,
    perquisiteName: string,
    perquisiteValue: number | 0,
    payHeadName?:string,
}

export interface PayHeadsModel{
    payHeadID: number,
    payHeadName: string,
    description: string,
    payHeadNature: string,
    payHeadType: string,
    payHeadTypeEditable: boolean,
    variablePaycode: boolean,
    variablePaycodeEditable: boolean,
    partOfGross: boolean,
    partOFGrossEditable: boolean,
    partOfCTC: boolean,
    partOfCTCEditable: boolean,
    partOfPFGross: boolean,
    partOfPFGrossEditable: boolean,
    partOfESIGross: boolean,
    partOfESIGrossEditable: boolean,
    partOfESIRate: boolean,
    partOfESIRateEditable: boolean,
    partOfLWFGross: boolean,
    partOfPTGross: boolean,
    partOfPTGrossEditable: boolean,
    payWithSalary: boolean,
    payWithSalaryEditable: boolean,
    showOnSalrySlip: boolean,
    showOnSalarySlipEditable: boolean,
    showOnSalaryRegister: boolean,
    showOnSalaryRegisterEditable: boolean,
    arrearApplicable: boolean,
    arrearApplicableEditable: boolean,
    payInJoinningMonth: boolean,
    payInLeavingMonth: boolean,
    taxable: string,
    taxableEditable: boolean,
    taxDeducted: string,
    taxDeductedEditable: boolean,
    taxSection: string,
    taxSectionEditable: boolean,
    subSectionID: number,
    excludeExemptFromChallanIncome: boolean,
    excludeExemptFromChallanIncomeEditable: boolean,
    exemptIncomeForBillSubmitted: boolean,
    partOfFBP: boolean,
    fbpType: string,
    minimumFBP: number,
    maximumFBP: number,
    rounding: boolean,
    roundingEditable: boolean,
    payPrsenceDepend: boolean,
    payPrsenceDependEditable: boolean,
    prorateWithDOJDOL: boolean,
    prorateWithDOJDOLEditable: boolean,
    prefix: string,
    lastNumber: number,
    payCode:string
  }

  export interface PayGroupModel {
  policyID: number,
  policyTypeID: number,
  policyName: string,
  description: string,
  pfApplicable: boolean,
  esiApplicable: boolean,
  vpfApplicable: boolean,
  lwfApplicable: boolean,
  ptApplicable: boolean,
  leaveEncashmentApplicable: boolean,
  bonusApplicable: boolean,
  bonusSettingID: number,
  gratuityApplicable: boolean,
  paidDaysFormula: string,
  salaryDaysFormula: string,
  minimumPaidDaysForSalaryProcess: number,
  salarySlipTemplateID: number,
  settlementSlipTemplateID: number,
  taxSlipTemplateID: number,
  reimbursementSlipTemplateID: number,
  revisionLatterTemplateID: number,
  appointmentLatterTemplateID: number,
  contractSlipTemplateID: number,
  allPayComponents: Array<PayAllComponentModel>
  }

  export interface PayAllComponentModel {
        payCode: string,
        payComponentName: string,
        payHeadID: number,
        payHeadName: string,
        componentValue: string,
        sequenceNumber: number,
        formula: string,
        amount: number,
        selected: boolean
  }

  export interface PayComponentMapModel{
        payComponentID: 0,
        payHeadID: 0,
        payHeadName: string,
        payCode: string,
        payComponentName: string,
        payComponentType: string,
        variableComponent: boolean | true,
        prorateOnPaidDays: boolean | true,
        taxable: string,
        nonTaxableLimit: 0,
        pfApplicable: boolean | true,
        esiApplicable: boolean | true,
        lwfApplicable: boolean | true,
        ptApplicable: boolean | true,
        bonusApplicable: boolean | true,
        leaveEncashmentApplicable: boolean | true,
        payWithSalary: boolean | true,
        showOnSalarySlip: boolean | true,
        salarySlipOrder: 0,
        showOnSalaryRegister: boolean | true,
        salaryRegisterOrder: 0,
        rounding: 0,
        partOfCTC: boolean | true,
        partOfGross: boolean | true,
        payInJoiningMonth: boolean | true,
        payInJoiningMonthDay: 0,
        payInLeavingMonth: boolean | true,
        payInLeavingMonthDay: 0,
        arrearAplicable: boolean | true,
        leaveID: 0,
        loanType: string,
        loanEligibilityDays: 0,
        interestType: string,
        interestRate: 0,
        loanAmountLimit: 0,
        maxEMI: 0,
        exceptionAllowed: boolean | true,
        blockPeriod: string,
        payOnClaim: boolean | true,
        entitlementCycle: string,
        entitlementDay: 0,
        restrictClaimWindo: boolean | true,
        claimWindowPeriodFrom: 0,
        claimWindowPeriodTo: 0,
        claimFrequency: string,
        transferBalance: string,
        claimRequestLimit: 0,
        perquisiteTypeID: 0,
        perquisiteName: string,
        perquisiteValue: 0,
        policyID: 0,
        sequenceNumber: 0,
        componentValue: string,
        formula: string,
        amount: 0,
        formulaKeys: FormulaObject[],
        CTCformula:number | 0
  }
  export interface FormulaObject {
    keyWordName: string,
    description: string,
    groupID: number
  }
  